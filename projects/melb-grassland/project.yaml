project_name: Melb_grassland
runner_class: JythonRunner

base_params:

    #----------------------------------------------------------------------
    # basic info
    #----------------------------------------------------------------------

    Debug.Test.With.20.PUs: False
    DEBUG: False
    
    Debug.Test.With.given.num.of.PUs: False
    Debug.Num.of.PUs.to.test.with: 10

    step.interval: 5 # make sure you update PAR.management.cost.per.pixel if you change this
    numTimeSteps: 4
    
    pixel.size: 50


    DebugSaveLossModelOutFiles: False

    use.run.number.as.seed: True
    runID: $$run_id$$

    # These variables seem not to be used so once confimed should be deleted.
    dbmsFunctionsRFileName: dbms.functions.variables.melb.grassland.R
    test_dev_and_offsetting_loop: TRUE

    globalDBdriver: SQLite
    dynamicPUinfoTableName: dynamicPUinfo
    staticPUinfoTableName: staticPUinfo
    offsettingTestingInfoTableName: offsettingTestingInfo
    LandscapeCondTableName: landscapeCondition

    PUcondTableName: PUcond

    PAR.prop.pixels.in.PU.to.reserve: 0.7

    #-----------------------------------------
    #  start_point = 1  - initialise PU info
    #  start_point = 2  - initialise cost info
    #  start_point = 3  - loop over timesteps
    #                     res/loss/cond/eval etc
    #-----------------------------------------
    start_point: 1

    rows: 782
    cols: 832
    #non.habitat.indicator:  -9999
    non.habitat.indicator:  0

    #----------------------------------------------------------------------
    # New Variables added when converting to Melb Grassland
    #----------------------------------------------------------------------


    #----------------------------------
    #  Variables for reserve.Zonation.R
    #----------------------------------
    usePreviousZonationResult: True
    PAR.zonation.select.partial.patches: True
    zonation.threshold: 0.8
    PAR.zonation.prop.of.patch.overlap: 1 
    PAR.reserve.duration: 10000

    #----------------------------
    #  Variables for loss.model.R
    #----------------------------
    OPT.use.offsetting.in.loss.model: True
    PAR.pus.lost.per.timestep: 0
    loss.model.root.filename: $$output_path$$lossModel
    
    # specifies how long the reserves (offsets?) will last
    PAR.management.duration: 9999

    #----------------------------
    #  Variables for offset.model.R
    #----------------------------
    OPT.specify.offset.pool.with.map: True
    OPT.specify.development.pool.with.map: True

    OPT.partial.offsets.allowed: True
    OPT.leak.offsets.outside.study.area: False
    OPT.offset.leakage.prob: 0.2
    OPT.do.strategic.offsetting: False
    OPT.private.offset.multiplier: 1
    OPT.strategic.offset.multiplier: 1
    OPT.probResExpiringPerTimeStep: 0
    OPT.probManExpiringPerTimeStep: 0


    offsettingGlobalsTableName: OFFSETTING_GLOBALS
    offsettingWorkingVarsTableName: OFFSETTING_WORKING_VARS

    OPT.offset.pool.option: UNDEFINED

    # define offset pool - this varies between scenarios so need a swtich
    # which is defined above
    PAR.offset.pool.map.filename.random: offset_pool_mask_random.txt
    PAR.offset.pool.map.filename.strategic: offset_pool_mask_strategic.txt

    #-------------------------------------------
    #  Variables for grassland.condition.model.R
    #-------------------------------------------

    OPT.use.smoothing.in.grassland.cond.model: False
    PAR.prob.of.crossing.thresh: 0.0005

    # With this true unmanaged areas don't degrade
    OPT.unmanaged.is.stable: False

    PAR.grassland.variability.std.dev: 0.02
    PAR.grassland.threshold.value: 0.35
    PAR.grassland.min.cond.score: 0.1
    PAR.grassland.max.cond.score: 0.75

    OPT.smoothing.option: 2 # OPT.VAL.only.use.pixels.below.fixed.val.in.smoothing
    PAR.fixed.val.for.smoothing: 0.12

    OPT.use.raster.maps.for.input.and.output: True

    PAR.time.steps.filename: $$model_path$$input_data/condModel_timesteps.txt
    PAR.managed.above.thresh.filename: $$model_path$$input_data/condModel_above_thresh_curve.txt
    PAR.managed.below.thresh.filename: $$model_path$$input_data/condModel_below_thresh_curve.txt
    PAR.unmanaged.filename: $$model_path$$input_data/condModel_unmanaged_curve.txt

    #-------------------------------------------
    #  Variables for reserve.random.R
    #-------------------------------------------
    OPT.reserve.parcels.based.on.budget: False


####################################

        #---------------------------------
        #  Variables for initialise.cost.information.R
        #  Note: I don't think this is used in this analysis
        #---------------------------------

    # need a 5 here because the code wants a cost per year
    PAR.management.cost.per.pixel: 15.0 # 0.03 * 50 * 50 / step.interval
    OPT.cost.scenario: 6 # OPT.VAL.PU.cost.is.a.fixed.value.per.sq.meter
    # this is only if using OPTVALPUcostIsSampledFromRealMelbCosts
    # if this is false and then will sample from the actual
    # Melb cost distribution
    OPTsampleMelbCostsFromLogNormDist: False


#  input_files

    master.habitat.map.zo1.base.filename: $$model_path$$input_data/hab.map.master.zo1

    planning.units.filename.base: $$model_path$$input_data/planning.units.uid_20ha
    planning.units.filename: $$model_path$$input_data/planning.units.uid_20ha.txt

    # this is set in model.py based on the setting of OPT.offset.pool.option
    PAR.offset.pool.map.filename: UNDEFINED

    # define development pool - this is same in all scens
    PAR.development.pool.map.filename: $$model_path$$input_data/dev_pool_mask.txt
    PAR.Zonation.reserve.map: $$model_path$$input_data/zonation_output.rank.txt

#  output_files
    PAR.pus.in.dev.pool: $$output_path$$PUs_IN_DEV_POOL.txt
    PAR.pus.in.offset.pool: $$output_path$$PUs_IN_OFFSET_POOL.txt

    PUinformationDBname: $$output_path$$PUdb.dbms
    CondDBname: $$output_path$$conddb.dbms
    cost.map.base.filename: $$output_path$$costMap

    cond.model.root.filename: $$output_path$$condMap


    reserved.pid.list.filename: $$output_path$$reserved.pid.list.txt
    unreserved.pid.list.filename: $$output_path$$unreserved.pid.list.txt

    reserve.map.name.base: $$output_path$$zreserve.map

    pu.reserve.info.file: $$output_path$$puReserveInfo.txt
    reserved.planning.units.filename.base: $$output_path$$reservedPlanningUnits
    managed.planning.units.filename.base: $$output_path$$managedPlanningUnits


scenarios:
  - name: Do nothing
    parameters:
      reserveSelectionMethod: ZONATION
      # zonation.threshold: 1
      OPT.use.offsetting.in.loss.model: False
      OPT.specify.offset.pool.with.map: False
      OPT.specify.development.pool.with.map: True
      OPT.offset.pool.option: UNDEFINED
      PAR.pus.lost.per.timestep: 0

  # - name: Worst Case
  #   parameters:
  #     variables:
  #       reserveSelectionMethod: ZONATION
  #       zonation.threshold: 1
  #       OPT.use.offsetting.in.loss.model: False
  #       OPT.specify.offset.pool.with.map: False
  #       OPT.specify.development.pool.with.map: True
  #       OPT.offset.pool.option: UNDEFINED
  #       PAR.pus.lost.per.timestep: 78

  # - name: Best case
  #   parameters:
  #     variables:
  #       reserveSelectionMethod: ZONATION
  #       zonation.threshold: 0
  #       OPT.use.offsetting.in.loss.model: False
  #       OPT.specify.offset.pool.with.map: False
  #       OPT.specify.development.pool.with.map: True
  #       OPT.offset.pool.option: UNDEFINED
  #       PAR.pus.lost.per.timestep: 0

  # - name: Random offsets
  #   parameters:
  #     variables:
  #       reserveSelectionMethod: ZONATION
  #       zonation.threshold: 1
  #       OPT.use.offsetting.in.loss.model: True
  #       OPT.use.smoothing.in.grassland.cond.model: False
  #       OPT.specify.offset.pool.with.map: True
  #       OPT.specify.development.pool.with.map: True
  #       OPT.offset.pool.option: RANDOM
  #       PAR.pus.lost.per.timestep: 78

  # - name: Strat offset impl imm
  #   parameters:
  #     variables:
  #       reserveSelectionMethod: ZONATION
  #       zonation.threshold: 0.916
  #       OPT.use.offsetting.in.loss.model: False
  #       OPT.use.smoothing.in.grassland.cond.model: False
  #       OPT.specify.offset.pool.with.map: True
  #       OPT.specify.development.pool.with.map: True
  #       OPT.offset.pool.option: STRATEGIC

  #       PAR.pus.lost.per.timestep: 78

  # - name: Strat offset impl grad
  #   parameters:
  #     variables:
  #       reserveSelectionMethod: ZONATION
  #       zonation.threshold: 1

  #       OPT.use.offsetting.in.loss.model: True
  #       OPT.use.smoothing.in.grassland.cond.model: False
  #       OPT.specify.offset.pool.with.map: True
  #       OPT.specify.development.pool.with.map: True
  #       OPT.offset.pool.option: STRATEGIC

  #       PAR.pus.lost.per.timestep: 78
